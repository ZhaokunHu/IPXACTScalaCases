package IPXACT2009ScalaCases

// Generated by <a href="http://IPXACT2009scalaxb.org/">IPXACT2009scalaxb</a>.


case class WhiteboxElements(whiteboxElement: Seq[WhiteboxElementType] = Nil)
      
      


case class Cpu(nameGroupSequence1: NameGroupSequence,
  addressSpaceRef: Seq[AddrSpaceRefTypable] = Nil,
  parameters: Option[Parameters] = None,
  vendorExtensions: Option[VendorExtensions] = None)
      
      


case class Cpus(cpu: Seq[Cpu] = Nil)
      
      


/** Component-specific extension to componentType
*/
case class ComponentType(versionedIdentifierSequence1: VersionedIdentifierSequence,
  busInterfaces: Option[BusInterfaces] = None,
  channels: Option[Channels] = None,
  remapStates: Option[RemapStates] = None,
  addressSpaces: Option[AddressSpaces] = None,
  memoryMaps: Option[MemoryMaps] = None,
  model: Option[ModelType] = None,
  componentGenerators: Option[ComponentGenerators] = None,
  choices: Option[Choices] = None,
  fileSets: Option[FileSets] = None,
  whiteboxElements: Option[WhiteboxElements] = None,
  cpus: Option[Cpus] = None,
  otherClockDrivers: Option[OtherClocks] = None,
  description: Option[String] = None,
  parameters: Option[Parameters] = None,
  vendorExtensions: Option[VendorExtensions] = None) extends IPXACTDocumentTypesOption
      
      

sealed trait WhiteboxType

object WhiteboxType {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: IPXACT2009scalaxb.XMLFormat[WhiteboxType]): WhiteboxType = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: WhiteboxType) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[WhiteboxType] = Seq(RegisterValue2, Signal, Pin, Interface)
}

case object RegisterValue2 extends WhiteboxType { override def toString = "register" }
case object Signal extends WhiteboxType { override def toString = "signal" }
case object Pin extends WhiteboxType { override def toString = "pin" }
case object Interface extends WhiteboxType { override def toString = "interface" }


/** Defines a white box reference point within the component.
*/
case class WhiteboxElementType(nameGroupSequence1: NameGroupSequence,
  whiteboxType: WhiteboxType,
  driveable: Option[Boolean] = None,
  registerRef: Option[String] = None,
  parameters: Option[Parameters] = None,
  vendorExtensions: Option[VendorExtensions] = None)
      
      

