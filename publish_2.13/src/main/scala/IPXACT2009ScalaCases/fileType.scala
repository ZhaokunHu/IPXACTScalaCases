package IPXACT2009ScalaCases

// Generated by <a href="http://IPXACT2009scalaxb.org/">IPXACT2009scalaxb</a>.

sealed trait FileType

object FileType {
  def fromString(value: String, scope: scala.xml.NamespaceBinding)(implicit fmt: IPXACT2009scalaxb.XMLFormat[FileType]): FileType = fmt.reads(scala.xml.Text(value), Nil) match {
    case Right(x: FileType) => x
    case x => throw new RuntimeException(s"fromString returned unexpected value $x for input $value")
  }
  lazy val values: Seq[FileType] = Seq(Unknown, CSource, CppSource, AsmSource, VhdlSource, VhdlSourceu4587, VhdlSourceu4593, VerilogSource, VerilogSourceu4595, VerilogSourceu452001, SwObject, SwObjectLibrary, VhdlBinaryLibrary, VerilogBinaryLibrary, UnelaboratedHdl, ExecutableHdl, SystemVerilogSource, SystemVerilogSourceu453u460, SystemVerilogSourceu453u461, SystemCSource, SystemCSourceu452u460, SystemCSourceu452u460u461, SystemCSourceu452u461, SystemCSourceu452u462, VeraSource, ESource, PerlSource, TclSource, OVASource, SVASource, PslSource, SystemVerilogSourceu453u461a, SDC)
}

case object Unknown extends FileType { override def toString = "unknown" }
case object CSource extends FileType { override def toString = "cSource" }
case object CppSource extends FileType { override def toString = "cppSource" }
case object AsmSource extends FileType { override def toString = "asmSource" }
case object VhdlSource extends FileType { override def toString = "vhdlSource" }
case object VhdlSourceu4587 extends FileType { override def toString = "vhdlSource-87" }
case object VhdlSourceu4593 extends FileType { override def toString = "vhdlSource-93" }
case object VerilogSource extends FileType { override def toString = "verilogSource" }
case object VerilogSourceu4595 extends FileType { override def toString = "verilogSource-95" }
case object VerilogSourceu452001 extends FileType { override def toString = "verilogSource-2001" }
case object SwObject extends FileType { override def toString = "swObject" }
case object SwObjectLibrary extends FileType { override def toString = "swObjectLibrary" }
case object VhdlBinaryLibrary extends FileType { override def toString = "vhdlBinaryLibrary" }
case object VerilogBinaryLibrary extends FileType { override def toString = "verilogBinaryLibrary" }
case object UnelaboratedHdl extends FileType { override def toString = "unelaboratedHdl" }
case object ExecutableHdl extends FileType { override def toString = "executableHdl" }
case object SystemVerilogSource extends FileType { override def toString = "systemVerilogSource" }
case object SystemVerilogSourceu453u460 extends FileType { override def toString = "systemVerilogSource-3.0" }
case object SystemVerilogSourceu453u461 extends FileType { override def toString = "systemVerilogSource-3.1" }
case object SystemCSource extends FileType { override def toString = "systemCSource" }
case object SystemCSourceu452u460 extends FileType { override def toString = "systemCSource-2.0" }
case object SystemCSourceu452u460u461 extends FileType { override def toString = "systemCSource-2.0.1" }
case object SystemCSourceu452u461 extends FileType { override def toString = "systemCSource-2.1" }
case object SystemCSourceu452u462 extends FileType { override def toString = "systemCSource-2.2" }
case object VeraSource extends FileType { override def toString = "veraSource" }
case object ESource extends FileType { override def toString = "eSource" }
case object PerlSource extends FileType { override def toString = "perlSource" }
case object TclSource extends FileType { override def toString = "tclSource" }
case object OVASource extends FileType { override def toString = "OVASource" }
case object SVASource extends FileType { override def toString = "SVASource" }
case object PslSource extends FileType { override def toString = "pslSource" }
case object SystemVerilogSourceu453u461a extends FileType { override def toString = "systemVerilogSource-3.1a" }
case object SDC extends FileType { override def toString = "SDC" }

trait FileTypeOption
